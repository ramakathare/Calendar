@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>How to start</title>
    <script src="~/scheduler/dhtmlxscheduler.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_recurring.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_minical.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_key_nav.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_limit.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_multiselect.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_editors.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxcombo.js" type="text/javascript"></script>
    <script src="~/scheduler/ext/dhtmlxscheduler_multiselect.js" type="text/javascript"></script>
    @* <script src="~/scheduler/ext/dhtmlxscheduler_quick_info.js" type="text/javascript"></script>*@
    
    <script src="~/Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.blockUI.js" type="text/javascript"></script>
    <script src="~/Content/chosen/chosen.jquery.min.js" type="text/javascript"></script>
    <script src="../../Scripts/jquery-ui-1.8.20.min.js" type="text/javascript"></script>
    <script src="../../Content/jQueryTE/jquery-te-1.4.0.min.js" type="text/javascript"></script>
    
    <script type="text/javascript">
        $j = jQuery.noConflict(true);
    </script>
    <script src="~/scheduler/MyScripts.js" type="text/javascript"></script>
    <link rel="stylesheet" href="~/scheduler/dhtmlxscheduler.css" type="text/css">
    <link rel="stylesheet" href="~/scheduler/dhtmlxcombo.css" type="text/css">

    <link href="~/Content/chosen/chosen.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/themes/base/jquery.ui.dialog.css" rel="stylesheet" type="text/css" />
    @* <link href="../../Content/Site.css" rel="stylesheet" type="text/css" />*@
    <link href="../../Content/jQueryTE/jquery-te-1.4.0.css" rel="stylesheet" type="text/css" />
    <style type="text/css" media="screen">
        html, body
        {
            margin: 0px;
            padding: 0px;
            height: 100%;
            overflow: hidden;
        }
        input, textarea
        {
            font-size: 1.2em;
        }
        .displayNone
        {
            display: none;
        }
        .jqte
        {
            margin: 0px;
            border: none;
            overflow: hidden;
            transition: -moz-box-shadow 0.4s ease 0s, border 0.4s ease 0s;
            box-shadow: none;
            height: 90%;
            position: relative;
        }
        .jqte_editor, .jqte_source
        {
            overflow: auto;
            padding: 10px;
            resize: none;
            word-wrap: break-word;
            height: 81%;
            border: 1px solid #DDDDDD;
        }
        .marginAuto
        {
            margin: auto;
        }
        .agendaEditorWrapper
        {
            position: relative;
        }
        input.my_dhx_btn_set[type="button"]
        {
            border-radius: 5px;
            color: #FFFFFF;
            font-size: 12px;
            font-weight: bold;
            margin: 12px 0 0;
            padding: 0;
            background: #22A1BC;
            border: 1px solid #E2E2E2;
            height: 30px;
            line-height: 30px;
            padding: 0 20px;
        }
        .dhx_delete_btn_set
        {
            background: #FF0031;
        }
        .dhx_cancel_btn_set
        {
            background: #FF8831;
            color: White;
        }
        .msgBox
        {
            display: none;
            background: none repeat scroll 0 0 #EEEEEE;
            border-radius: 10px 10px 10px 10px;
            color: #0088FF;
            left: 40%;
            line-height: 54px;
            opacity: 0.9;
            position: absolute;
            text-align: center;
            width: 20%;
            z-index: 999999;
            top: 30%;
        }
    </style>
    @*<!-- YUI Rich text editor section -->
    <!-- Skin CSS file -->
    <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.9.0/build/assets/skins/sam/skin.css">
    <!-- Utility Dependencies -->
    <script src="http://yui.yahooapis.com/2.9.0/build/yahoo-dom-event/yahoo-dom-event.js"></script> 
    <script src="http://yui.yahooapis.com/2.9.0/build/element/element-min.js"></script> 
    <!-- Needed for Menus, Buttons and Overlays used in the Toolbar -->
    <script src="http://yui.yahooapis.com/2.9.0/build/container/container_core-min.js"></script>
    <script src="http://yui.yahooapis.com/2.9.0/build/menu/menu-min.js"></script>
    <script src="http://yui.yahooapis.com/2.9.0/build/button/button-min.js"></script>
    <!-- Source file for Rich Text Editor-->
    <script src="http://yui.yahooapis.com/2.9.0/build/editor/editor-min.js"></script>*@

    <script type="text/javascript">
        $j.fn.scrollTo = function (target, options, callback) {
            if (typeof options == 'function' && arguments.length == 2) { callback = options; options = target; }
            var settings = $j.extend({
                scrollTarget: target,
                offsetTop: 50,
                duration: 500,
                easing: 'swing'
            }, options);
            return this.each(function () {
                var scrollPane = $j(this);
                var scrollTarget = (typeof settings.scrollTarget == "number") ? settings.scrollTarget : $j(settings.scrollTarget);
                var scrollY = (typeof scrollTarget == "number") ? scrollTarget : scrollTarget.offset().top + scrollPane.scrollTop() - parseInt(settings.offsetTop);
                scrollPane.animate({ scrollTop: scrollY }, parseInt(settings.duration), settings.easing, function () {
                    if (typeof callback == 'function') { callback.call(this); }
                });
            });
        }


        

    </script>
    
</head>
<body onload="init();">
    <div class="ajaxDiv" id="ajaxDivId">
    </div>
    <div class="msgBox" id="msgDiv">
        Request completed Successfully</div>
    <div id="agendaDiv" class="agendaEditorWrapper displayNone">
        <div id="agendaDivContainer">
        </div>
        <div>
            <input type="button" id="agendaSaveButton" class="my_dhx_btn_set" value="save" data-eventid=""
                onclick="saveAgenda($j(this));" />
            <input type="button" id="agendaDownload" class="my_dhx_btn_set" value="Download"
                onclick="agendaToPdf($j('#agendaSaveButton'));" />
        </div>
    </div>
    <div class="schedulerWrapper" style='width: 300px; height: 252px;overflow: hidden;'>
    <div id="scheduler_here" class="dhx_cal_container" style='width: 100%; height: 100%;overflow: hidden;padding-right: 15px;' >
        <div class="dhx_cal_navline displayNone">
            <div class="dhx_cal_prev_button">
                &nbsp;</div>
            <div class="dhx_cal_next_button">
                &nbsp;</div>
            <div class="dhx_cal_today_button">
            </div>
            <div class="dhx_cal_date">
            </div>
            <div class="dhx_minical_icon" id="dhx_minical_icon" onclick="show_minical()" style="left:300px">
                &nbsp;</div>
                 <div class="dhx_cal_tab" name="ThriMonth_tab" style="right:280px"></div>
            <div class="dhx_cal_tab" name="day_tab" style="right: 204px;">
            </div>
            <div class="dhx_cal_tab" name="week_tab" style="right: 140px;">
            </div>
            <div class="dhx_cal_tab" name="month_tab" style="right: 76px;">
            </div>
           
        </div>
        <div class="dhx_cal_header displayNone">
        </div>
        <div class="dhx_cal_data">
        </div>
    </div>
    </div>
</body>
<script type="text/javascript">

    

    $j(function () {
        ajaxManager.run();
    });

    // http://docs.dhtmlx.com/scheduler/samples/
    //http://docs.dhtmlx.com/scheduler/recurring_events.html
    //http://docs.dhtmlx.com/scheduler/samples/03_extensions/26_multi_day_visible.html
    //http://docs.dhtmlx.com/scheduler/jquery_integration.html

    var currentAddedid = 0;
    var eventUnderProgress;


    function init() {

        //#region scheduler-config
        scheduler.config.details_on_dblclick = true;
        scheduler.config.details_on_create = true;

        scheduler.config.xml_date = "%Y-%n-%d %H:%i";
        scheduler.config.prevent_cache = true;
        scheduler.config.full_day = true;

        scheduler.config.buttons_left = ["dhx_save_btn", "add_agenda", "send_invitation", "add_outcome"];
        scheduler.config.buttons_right = ["dhx_delete_btn", "dhx_cancel_btn"];

        scheduler.config.event_duration = 60; //specify event duration in minutes for auto end time
        scheduler.config.auto_end_date = true;

        scheduler.config.start_on_monday = false;
        //#endregion  

        //#region scheduler config lightbox sections
        scheduler.config.lightbox.sections = [
			{ name: "text", height: 30, map_to: "text", type: "textarea", focus: true },
            { name: "description", height: 100, map_to: "description", type: "textarea" },
			{ name: "recurring", height: 115, type: "recurring", map_to: "rec_type", button: "recurring" },
            { name: "type", height: 21, map_to: "type", type: "select", filtering: true, options: scheduler.serverList("type") },
            { name: "attendees", height: 21, map_to: "attendees", type: "my_editor", filtering: true, options: scheduler.serverList("attendees") },
            { name: "time", height: 72, type: "calendar_time", map_to: "auto" }
		];

        //#endregion

        //#region scheduler-formblocks
        scheduler.form_blocks["my_editor"] = {
            render: function (sns) {
                html = "<div class='dhx_cal_ltext' style='height:29px;'><select data-placeholder='Add Participants' multiple>";
                $j.each(scheduler.serverList("attendees"), function (i, x) {
                    html += "<option value=" + x.key + ">" + x.label + "</option>";
                });
                html += "</select></div>";
                return html;
            },
            set_value: function (node, value, ev) {
                if (typeof (value) != "undefined") {
                    $j.each(value.split(","), function (i, e) {
                        $j(node).children("select").children("option[value='" + e + "']").attr("selected", true);
                    });
                }
            },
            get_value: function (node, ev) {
                result = "";
                $j.each($j(node).children("select").children("option:selected"), function (i, e) {
                    if (result != "") result += ",";
                    result += $j(e).val();
                });
                return result;
            },
            focus: function (node) {
                // var a = node.childNodes[0];  a.select(); a.focus();
            }
        };

        //#endregion

        //#region scheduler locale labels

        scheduler.locale.labels.section_type = "Type";
        scheduler.locale.labels.section_text = "Title";
        scheduler.locale.labels.section_attendees = "Participants";
        scheduler.locale.labels["send_invitation"] = "Send Invitation";
        scheduler.locale.labels["add_agenda"] = "Agenda";
        scheduler.locale.labels["add_outcome"] = "Minutes";
        scheduler.locale.labels["dhx_cancel_set"] = "Close";
        scheduler.locale.labels.ThriMonth_tab = "Custom"

        //#endregion

        
        //#region scheduler attach events

        scheduler.attachEvent("onTemplatesReady",function(){
			
           
		});

        scheduler.attachEvent("onMouseMove", function (id, e){
            
        });

        scheduler.attachEvent("onEventChanged", function (id, e) {
            if (id.toString().indexOf('#') < 0) add_update_event(id, e, 'edit');
        });

        scheduler.attachEvent("onEventAdded", function (id, e) {
            add_update_event(id, e, 'add');
        });

        scheduler.attachEvent("onBeforeEventDelete", function (id, e) {
            eventUnderProgress = e;
            return true;
        });

        scheduler.attachEvent("onEventDeleted", function (id) {
            deleteEvent(id);
        });

        scheduler.attachEvent("onLightboxButton", function (button_id, node, e) {
            // alert(button_id);
            var event_id = scheduler.getState().lightbox_id
            var ev = scheduler.getEvent(event_id);
            if (button_id == "send_invitation") {
                sendEmail(ev);
            }
            var box = scheduler.getLightbox();

            if (button_id == "add_agenda") {
                scheduler.endLightbox(false, box);
                addAgenda(event_id);
            }
        });

        scheduler.attachEvent("onBeforeLightbox", function (id) {

            var ev = scheduler.getEvent(id);

            if (!$j(scheduler.formSection('type').node).has(".chosen-container").length) {
                $j(scheduler.formSection('type').node).children("select").chosen({
                    no_results_text: "not found",
                    allow_single_deselect: true,
                    disable_search_threshold: 10,
                    enable_split_word_search: true,
                    single_backstroke_delete: true //).change(function(){$("#viewLeadsGrid").trigger('reloadGrid');});;
                });
            }
            if (!$j(scheduler.formSection('attendees').node).has(".chosen-container").length) {
                $j(scheduler.formSection('attendees').node).children("select").chosen({
                    no_results_text: "not found",
                    allow_single_deselect: true,
                    disable_search_threshold: 10,
                    enable_split_word_search: true,
                    single_backstroke_delete: true //).change(function(){$("#viewLeadsGrid").trigger('reloadGrid');});;
                });
            }


            $j(scheduler.formSection('type').node).children(".chosen-container").attr("style", "width:400px;position:absolute");

            $j(scheduler.formSection('type').node).children("select").val(ev.type);
            $j(scheduler.formSection('type').node).children("select").trigger("chosen:updated");

            $j(scheduler.formSection('type').node).parent().css("position", "inherit");
            $j(scheduler.formSection('type').node).css("height", "28px");


            $j(scheduler.formSection('attendees').node).children(".chosen-container").attr("style", "width:400px;position:absolute");

            $j(scheduler.formSection('attendees').node).children("select").children("option:selected").removeAttr("selected");
            if (typeof (ev.attendees) != "undefined") {
                $j.each(ev.attendees.split(","), function (i, e) {
                    $j(scheduler.formSection('attendees').node).children("select").children("option[value='" + e + "']").attr("selected", true);
                });
            }

            $j(scheduler.formSection('attendees').node).children("select").trigger("chosen:updated");

            $j(scheduler.formSection('attendees').node).parent().css("position", "inherit");
            $j(scheduler.formSection('attendees').node).css("height", "28px");


            return true;
        });

        scheduler.attachEvent("onLightbox", function (id) {
            $j(".dhx_cancel_btn_set").children("div:last-child").html("Close");

            if (id.toString().indexOf('#') >= 0) {
                $j(".add_agenda_set").addClass("displayNone");
                $j(".send_invitation_set").addClass("displayNone");
                $j(".add_outcome_set").addClass("displayNone");
            } else {
                var ev = scheduler.getEvent(id);
                if (ev.saved2DB) {
                    $j(".add_agenda_set").removeClass("displayNone");
                    $j(".send_invitation_set").removeClass("displayNone");
                    $j(".add_outcome_set").removeClass("displayNone");
                }
                else if (!ev.saved2B) {
                    $j(".add_agenda_set").addClass("displayNone");
                    $j(".send_invitation_set").addClass("displayNone");
                    $j(".add_outcome_set").addClass("displayNone");
                }
            }
        });

        //#endregion

        //#region dataAttributes

        scheduler.data_attributes = function () {
            var empty = function (a) { return a || ""; }
            return [["id"],
        ["text"],
        ["start_date", scheduler.templates.xml_format],
        ["end_date", scheduler.templates.xml_format],
        ["rec_type", empty],
        ["event_length", empty],
        ["event_pid", empty]];
        }

        //#endregion
        //  scheduler.config.readonly = false;

        scheduler.xy.nav_height = 0;
        scheduler.init('scheduler_here', new Date(), "day");
        scheduler.load('/Home/GetCalendarData', 'json', function () {
           executeScroll();
        });

        scheduler.attachEvent("onAfterSchedulerResize", function(){
            executeScroll();
        });

    }

    function executeScroll(){
         var height = $j(".dhx_cal_data")[0].scrollHeight
            var innerHeight = $j(".dhx_cal_data").innerHeight();
            var hourHeight = $j(".dhx_scale_hour").innerHeight();
            var sections = height / 24;
            var now = new Date();
            now = now.getHours()
            $j(".dhx_cal_data").scrollTo(sections * now - (((innerHeight / hourHeight) / 3) * 43))
    }

    function deleteEvent(id) {

        // ajaxManager.addReq({
        //var e = scheduler.getEvent(id);

        if (typeof (eventUnderProgress) == "undefined") return false;
        else if (!eventUnderProgress.saved2DB) return false;


        ajaxManager.addReq({
            type: "POST",
            url: "/Home/AddEvent?Op=del",
            datatype: "json",
            data: {
                id: typeof (eventUnderProgress) != "undefined" ? eventUnderProgress.id : id,
                rec_type: typeof (eventUnderProgress) != "undefined" ? eventUnderProgress.rec_type : "",
                event_pid: typeof (eventUnderProgress) != "undefined" ? eventUnderProgress.event_pid : 0,
                rec_pattern: typeof (eventUnderProgress) != "undefined" ? eventUnderProgress.rec_pattern : ""
            },
            success: function (data) {
                typeof (eventUnderProgress) == "undefined";
                if (!data.success) {
                    alert("Error Occured : Refresh the calendar");
                }
                else {
                    showmsg();
                }
            },
            error: function () {
                alert("Error Occured : Refresh the calendar");
            }
        });
    }

    function add_update_event(id, e, oper) {

        //        e.start_date = e.start_date.format("isoDateTime");
        //        e.end_date = e.end_date.format("isoDateTime");
        //        var obj = sanitize(e);

        var i = 0;

        // if ((e.event_pid > 0) && e.saved2DB) oper = "edit";

        ajaxManager.addReq({
            type: "POST",
            url: "/Home/AddEvent?op=" + oper,
            datatype: "json",
            data: {
                id: e.id,
                text: e.text,
                start_date: e.start_date.format("isoDateTime"),
                end_date: e.end_date.format("isoDateTime"),
                type: e.type,
                rec_type: e.rec_type,
                event_length: e.event_length,
                event_pid: e.event_pid,
                rec_pattern: e.rec_pattern,
                description: e.description,
                attendees: e.attendees
            },
            success: function (data) {
                if (!data.success) {
                    alert("Error Occured : Refresh the calendar");
                    myShowlightBox(e.id);
                } else {
                    showmsg();

                    if (data.i > 0) {
                        scheduler.changeEventId(id, data.i);
                        scheduler.getEvent(data.i).saved2DB = true;
                        //  scheduler._dhtmlx_confirm("Event saved successfully \n Do you want to add agenda too", "Success", function () { addAgenda(data.i); })
                        myShowlightBox(data.i);
                    } else {
                        myShowlightBox(e.id);
                    }
                }
            },
            error: function () {
                alert("Error Occured : Refresh the calendar");
                myShowlightBox(e.id);
            }

        });
    }

    function addAgenda(id) {

        var html = "";

        ajaxManager.addReq({
            type: "POST",
            url: "/Home/GetAgenda/" + id,
            datatype: "json",
            success: function (data) {
                if (!data.success) {
                    alert("Error Occured : Agenda not found");
                } else {
                    showmsg();
                    //  var bytes = [];
                    //  bytes = data.agenda.split(',');
                    //  alert(bytes);
                    //  var str = pack(bytes);
                    //  alert(str);
                    if (data.agenda == "-1") {
                        $j(".jqte_editor").html("");
                    } else
                        $j(".jqte_editor").html(unescape(data.agenda));
                    $j("#agendaSaveButton").data('eventid', id);
                    $j("#agendaDiv").dialog({
                        title: "Agenda",
                        width: 800,
                        height: 400,
                        minHeight: 400,
                        maxHeight: 500,
                        close: function (event, ui) { myShowlightBox(id); }
                    });
                }
            },
            error: function () {
                alert("Error Occured : Agenda not found");
            }
        });

        $j('#agendaDivContainer').jqte("hello");
        // settings of status
        var jqteStatus = true;
        $j(".status").click(function () {
            jqteStatus = jqteStatus ? false : true;
            $j('#agendaDivContainer').jqte({ "status": jqteStatus })
        });
    }

    function saveAgenda(input) {
        id = $j(input).data('eventid');
        //  alert(id);
        var str = $j(".jqte_editor").html();

        //  var bytes = [];
        //  bytes = unpack(str);

        ajaxManager.addReq({
            type: "POST",
            url: "/Home/saveAgenda",
            datatype: "json",
            data: {
                id: id,
                // bytes: bytes.toString()
                bytes: escape(str)
            },
            success: function (data) {
                if (!data.success) {
                    alert("Error Occured : Agenda not saved");
                } else {
                    showmsg();
                    // alert("Agenda saved successfully");
                    $j("#agendaDivContainer").html("");
                    $j("#agendaDiv").dialog("close");
                }

            },
            error: function () {
                alert("Error Occured : Agenda not saved");
            }
        });
    }

    function agendaToPdf(input) {
        id = $j(input).data('eventid');
        url: "/Home/AgendaToPdf/" + id

        //  title = "Agenda"+scheduler.getEvent(id).text.toString().replace(' ', '_') + ".pdf";

        window.open("/Home/AgendaToPdf/" + id, "_blank");
    }

    function pack(bytes) {
        var chars = [];
        for (var i = 0, n = bytes.length; i < n; ) {
            chars.push(((bytes[i++] & 0xff) << 8) | (bytes[i++] & 0xff));
        }
        return String.fromCharCode.apply(null, chars);
    }

    function unpack(str) {
        var bytes = [];
        for (var i = 0, n = str.length; i < n; i++) {
            var char = str.charCodeAt(i);
            bytes.push(char >>> 8, char & 0xFF);
        }
        return bytes;
    }

    function show_minical() {
        if (scheduler.isCalendarVisible())
            scheduler.destroyCalendar();
        else
            scheduler.renderCalendar({
                position: "dhx_minical_icon",
                date: scheduler._date,
                navigation: true,
                handler: function (date, calendar) {
                    scheduler.setCurrentView(date);
                    scheduler.destroyCalendar()
                }
            });
    }

    function sendEmail(e) {

        if (!e.attendees.length > 0) {
            alert("Please add attendees");
            return false;
        }

        e.start_date = e.start_date.format("isoDateTime");
        e.end_date = e.end_date.format("isoDateTime");

        var obj = sanitize(e);

        var series_start_date = new Date(obj.event_length*1000);

        var ical = toICal(obj).toString();

       // alert(ical);

       // return false;

        ajaxManager.addReq({
            type: "POST",
            url: "/Home/sendEmail?ssd="+series_start_date,//?ical="+ical,
            datatype: "json",
            data: obj,
            success: function (data) {
                //  alert(data.success);
                if (!data.success) {
                    alert("Error Occured : Invitation not sent");
                } else {
                    showmsg();
                }
            },
            error: function () {
                alert("Error Occured : Invitation not sent");
            }
        });
    }

    function myShowlightBox(id) {
        ev = scheduler.getEvent(id);

        if (ev.rec_type == "none") return false;

        if (ev.event_pid > 0) {
            scheduler.config.lightbox_recurring = 'series';
        }
        scheduler.showLightbox(id);
        scheduler.config.lightbox_recurring = 'ask';
    }

    //#region other code snippets
    //scheduler._dhtmlx_confirm("hello","hello",function(){alert("hello");})

    //            if (!ev.child_id) {
    //                var parent_id = ev.parent_id || parent_select_options[0].key;
    //                var new_child_options = child_select_options[parent_id];
    //                update_select_options(scheduler.formSection('child').control, new_child_options);
    //            }

    //        scheduler.attachEvent("onAfterLightbox", function () {

    //        });

    //        scheduler.attachEvent("onBeforeEventChanged", function (ev, e, flag, ev_old) {
    //            alert(ev_old.text);
    //            eventUnderProgress = ev_old;
    //            return true;
    //        });


    //        scheduler.attachEvent("onEventCollision", function (id, evs) {
    //            return false;
    //        });
    //        scheduler.attachEvent("onEventCreated", function (id, e) {
    //            scheduler.edit(id);
    //            //scheduler.showLightbox(e.id);
    //            //alert(id);
    //        });

    //        scheduler.addMarkedTimespan({
    //            days: 0,               // marks each Sunday
    //            zones: "fullday",       // marks the entire day
    //            css: "gray_section"   // the applied css style
    //        });

    //        scheduler.updateView();

    //        scheduler.blockTime(0, "fullday");

    //    scheduler.config.first_hour = 8;
    //    scheduler.config.last_hour = 17;

    //        dhtmlXTooltip.config.className = 'dhtmlXTooltip tooltip';
    //        dhtmlXTooltip.config.timeout_to_display = 50;
    //        dhtmlXTooltip.config.delta_x = 15;
    //        dhtmlXTooltip.config.delta_y = -20;

    //[type]_[count]_[day]_[count2]_[days]#[extra]

    /* 
    type - the type of repeation: 'day','week','month','year'.
    count - the interval between events in the "type" units.
    day and count2 - define a day of a month ( first Monday, third Friday, etc ).
    days - the comma-separated list of affected week days.
    extra - the extra info that can be used to change presentation of recurring details. */


    //timshift=-330

    // scheduler.updateView();
    // scheduler.config.multi_day = true;

    //        scheduler.config.details_on_dblclick = true;
    //        scheduler.config.details_on_create = true;
    //        scheduler.config.drag_create = false;

    //            scheduler.attachEvent("onTemplatesReady", function () {
    //                var lightbox_form = scheduler.getLightbox(); // this will generate lightbox form
    //                var inputs = lightbox_form.getElementsByTagName('input');
    //                var date_of_end = null;
    //                for (var i = 0; i < inputs.length; i++) {
    //                    if (inputs[i].name == "date_of_end") {
    //                        date_of_end = inputs[i];
    //                        break;
    //                    }
    //                }

    //                var repeat_end_date_format = scheduler.date.date_to_str("%d.%m.%Y");
    //                var show_minical1 = function () {
    //                    if (scheduler.isCalendarVisible())
    //                        scheduler.destroyCalendar();
    //                    else {
    //                        scheduler.renderCalendar({
    //                            position: date_of_end,
    //                            date: scheduler._date,
    //                            navigation: true,
    //                            handler: function (date, calendar) {
    //                                date_of_end.value = repeat_end_date_format(date);
    //                                scheduler.destroyCalendar()
    //                            }
    //                        });
    //                    }
    //                };
    //                date_of_end.onclick = show_minical1;

    //            });

    //#endregion

    function showmsg() {
        $j('#msgDiv').fadeIn(2000, function () {
            $j('#msgDiv').fadeOut(2000);
        });
    }


    $j(document).ajaxStart($j.blockUI).ajaxStop($j.unblockUI);


    var ical = "";

    function toICal(ev) {
        debugger;

        var d = new Date(ev.start_date).toString();

        ev.location = "Add Location to list";

        //ev = this;
        ical+="BEGIN:VCALENDAR\n";
        ical+="PRODID:-//Microsoft Corporation//Outlook 14.0 MIMEDIR//EN\n";
        ical+="VERSION:2.0\n";
        ical+="METHOD:REQUEST\n";
        ical+="X-MS-OLK-FORCEINSPECTOROPEN:TRUE\n";
        ical+="BEGIN:VTIMEZONE\n";
        ical+="TZID:"+d.substring(d.lastIndexOf("(")+1,d.lastIndexOf(")"))+"\n";
        ical+="BEGIN:STANDARD\n";
        ical+="DTSTART:16010101T000000\n";
        ical+="TZOFFSETFROM:"+d.substring(d.lastIndexOf("+"),d.lastIndexOf("(")-1)+"\n";
        ical+="TZOFFSETTO:"+d.substring(d.lastIndexOf("+"),d.lastIndexOf("(")-1)+"\n";
        ical+="END:STANDARD\n";
        ical+="END:VTIMEZONE\n";

        //title = getTitle();
        //	if(title) { ical += "X-WR-CALNAME:"+title+"\n"; }
            
         ical += "BEGIN:VEVENT\n";
         ical+="ATTENDEE:attendee1@organization.com,attendee2@organization.com,attendee3@organization.com,\n";
         ical+="ORGANIZER;CN=Organizer name:mailto:organizer@covalense.com\n";
         ical+="CLASS:\n";
         ical+="CREATED:\n";
         ical+="DESCRIPTION:"+ev.description+"\n";
         ical+="LOCATION:"+ev.location+"\n";
                 
        if (ev.event_pid != 0 && ev.rec_type == "") {
            ical += "DTSTART:" + getTime(new Date(ev.start_date)) + "\n";
            ical += "DTEND:" + getTime(new Date(ev.end_date)) + "\n";
            ical += "RECURRENCE-ID:" + getTime(new Date(ev.event_length*1000)) + "\n";
            ical += "UID:" + ev.event_pid + "\n";
            ical += "SUMMARY:" + ev.text + "\n";
        }
        else if (ev.rec_type != "" && ev.event_pid == 0) {
            ical += "DTSTART:" + getStartTimeEvent(ev) + "\n";
            ical += "DTEND:" + getEndTimeEvent(ev) + "\n";
            ical += "RRULE:" + getRrule(ev) + "\n";
//            exdate = getExdate(ev.event_id, ev);
//            if (exdate != 0) { ical += "EXDATE:" + exdate + "\n"; }
            ical += "UID:" + ev.id + "\n";
            ical += "SUMMARY:" + ev.text + "\n";
        }
        else if (ev.rec_type == "" && ev.event_pid == 0) {
            ical += "DTSTART:" + getTime(new Date(ev.start_date)) + "\n";
            ical += "DTEND:" + getTime(new Date(ev.end_date)) + "\n";
            ical += "UID:" + ev.id + "\n";
            ical += "SUMMARY:" + ev.text + "\n";
        }
//        ical+="X-ALT-DESC;FMTTYPE=text/html:<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//E"+
//	           "N\">\n<HTML>\n<HEAD>\n<META NAME=\"Generator\" CONTENT=\"MS Exchange Server ve"+
//	           "rsion 14.02.5004.000\">\n<TITLE></TITLE>\n</HEAD>\n<BODY>\n<!-- Converted f"+
//	           "rom text/rtf format -->\n\n<P DIR=LTR><SPAN LANG=\"en-us\"></SPAN></P>\n\n</"+
//	           "BODY>\n</HTML>\n";
//        ical+="X-MICROSOFT-CDO-BUSYSTATUS:TENTATIVE\n";
//        ical+="X-MICROSOFT-CDO-IMPORTANCE:1\n";
//        ical+="X-MICROSOFT-CDO-INTENDEDSTATUS:BUSY\n";
//        ical+="X-MICROSOFT-DISALLOW-COUNTER:FALSE\n";
//        ical+="X-MS-OLK-AUTOSTARTCHECK:FALSE\n";
//        ical+="X-MS-OLK-CONFTYPE:0\n";
        ical+="BEGIN:VALARM\n";
        ical+="TRIGGER:-PT15M\n";
        ical+="ACTION:DISPLAY\n";
        ical+="DESCRIPTION:Reminder\n";
        ical+="END:VALARM\n";
        ical += "END:VEVENT\n";
        ical += "END:VCALENDAR";
        return ical;
    }

    function getEndTimeEvent(ev) {
        //start_date = new Date(getStartTimeEvent(ev)).format;
        start_date = new Date(ev.start_date);
        end_date = new Date(start_date.setSeconds(start_date.getSeconds() + ev.event_length));
        result = getTime(end_date);
        return result;
	}

    function getStartTimeEvent(ev) {
		mas = ev.rec_type.split("#");
		a = mas[0].split("_");		
		switch(a[0]) {
			case "day":
				return getTime(new Date(ev.start_date));
				break;

			case "week":
				diff = a[4].split(',');
				if(diff[0] == 0) { 
					n = 7;
				}
				else {
					n = diff[0];
				}
				day = parseInt(new Date(ev.start_date).format("d")) + (n - 1);
				if(day < 10) { day = "0"+day; }
				return new Date(ev.start_date).format("yyyymm")+""+day+"T"+new Date(ev.start_date).format("HHMMss");
				break;
			case "month":
			case "year":
				if(a[2] != "" && a[3] != "") {
					diff = a[2] - (new Date(ev.start_date)).getDay();
					if(diff > 0) { diff -= 7; }
					day = 7*a[3] + diff + 1;
					if(day < 10) { day = "0"+day; }
					return new Date(ev.start_date).format("yyyymm")+""+day+"T"+new Date(ev.start_date).format("HHMMss");
				}
				else {
					return this.getTime(new Date(ev.start_date));
				}
				break;
		}
	}

    function getTime(date) {
        date = date.format("isoDateTime");
        mas = date.split('-');
        if (mas[0] == 9999) {
            return "99990201T000000";
        }
        else {
            while(date.contains("-")){date = date.replace("-","");}
            while(date.contains(":")){date = date.replace(":","");}
            return date;
        }
    }

    function getRrule(ev) {
		mas = ev.rec_type.split("#");
		a = mas[0].split("_");
		
		type = "FREQ="+getConvertType(a[0])+";";
		interval = "INTERVAL="+a[1]+";";

		if(mas[1] != "no") { count = "COUNT="+mas[1]+";"; } else { count = ""; }
		count2 = a[3];
		if(a[2] != "") { day = getConvertDay(a[2]); } else { day = ""; }
		if(a[4] != "") { days = getConvertDays(a[4]); } else { days = ""; }
		if(day != "" && count2 != "") {
			byday = "BYDAY="+count2+""+day+";";
		}
		else if(days != "") {
			byday = "BYDAY="+days+";";
		}
		else {
			byday = "";
		}
		end_date = getTime(new Date(ev.end_date));
		if(end_date.substring(0, 4) != 9999) { until = "UNTIL="+end_date+";"; } else { until = ""; };
		return type+""+interval+""+count+""+byday+""+until;
    }   

    function getConvertType(i, mode) {
        if (typeof mode=="undefined") mode = false;
	   // a = [{'day' : "DAILY"},{'week' : "WEEKLY"},{'month' : "MONTHLY"},{'year' : "YEARLY"}];e
        // a = new Array("DAILY","WEEKLY","MONTHLY","YEARLY");
	    
        if(!mode) {
		    
                if(i=="day") return "DAILY"; 
                if(i=="week") return "WEEKLY";
                if(i=="month") return "MONTHLY";
                if(i=="year") return "YEARLY";
            
	    }
	    else {
		    return a[i];
	    }
    }

    function getConvertDay(i, mode) {
        if (typeof mode == "undefined") mode = false;
        
		x = new Array ("SU","MO","TU","WE","TH","FR","SA");
		// if(mode) {
		//	for(y=0;y<a.length;y++){
		//		if($a[$y] == $i) {
		//			return $y;
		//		}
		//	}
		//}
		//else{
			return x[i];	
		//}
    }

    function getConvertDays(n, ind) {
        ind = false;
		a = n.split(",");
		str = "";
		for(i=0;i<a.length;i++) {
			str += getConvertDay(a[i]);
			if(i != a.length-1) {str += ","; }
		}
		return str;
	}

    function getExdate(id, h) {
		a=0;
		if(id == h.event_pid && h.rec_type == "none") {
			    a = getTime(new Date(ev.event_length*1000));
		}
		//if(sizeof(a) != 0) {
		//	return implode(",", a);
		//}
		//else {
		//	return 0;
		//}
        return a;
	}

</script>
</html>
